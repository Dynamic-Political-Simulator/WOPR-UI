[{"C:\\Users\\geran\\source\\repos\\wopr\\src\\index.tsx":"1","C:\\Users\\geran\\source\\repos\\wopr\\src\\reportWebVitals.ts":"2","C:\\Users\\geran\\source\\repos\\wopr\\src\\MainScreen\\MainScreen.tsx":"3","C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\Terminal.tsx":"4","C:\\Users\\geran\\source\\repos\\wopr\\src\\Popsim\\PopsimMenu.tsx":"5"},{"size":511,"mtime":1606949752639,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":579,"mtime":1616878454901,"results":"9","hashOfConfig":"7"},{"size":1710,"mtime":1616879031616,"results":"10","hashOfConfig":"7"},{"size":154,"mtime":1616878405618,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xgcs7f",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\geran\\source\\repos\\wopr\\src\\index.tsx",[],["25","26"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\reportWebVitals.ts",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\MainScreen\\MainScreen.tsx",["27","28","29"],"import React from 'react';\r\nimport { Terminal } from '../Terminal/Terminal';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\nimport PopsimMenu from '../Popsim/PopsimMenu';\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\n\r\nexport function MainScreen() {\r\n    return (\r\n        <Router>\r\n                <Route exact path=\"/\">\r\n                    <Terminal/>\r\n                </Route>\r\n                <Route path=\"/popsim\">\r\n                    <PopsimMenu/>\r\n                </Route>\r\n        </Router>\r\n    )\r\n}","C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\Terminal.tsx",["30","31","32","33","34","35","36"],"import { SSL_OP_EPHEMERAL_RSA } from \"constants\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Form, Input, Row } from \"reactstrap\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport function Terminal() {\r\n  const [rows, setRows] = useState<string[]>([\"Welcome to WOPR\"]);\r\n\r\n  const [commandInput, setCommandInput] = useState<string>(\"\");\r\n\r\n  //function inputCommand() {\r\n    //if (commandInput !== undefined) {\r\n      //@ts-ignore\r\n      //setRows(rows => [...rows, commandInput]);\r\n    //}\r\n  //}\r\n\r\n  \r\n  useEffect(async() => {\r\n    setTimeout(() => {\r\n      setRows(rows => [...rows, \"System ready\"]);\r\n    },\r\n    500);\r\n  }, []);\r\n\r\n  const inputCommand = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if(commandInput == \"popsim\"){\r\n      window.location.assign(\"/popsim\")\r\n    }\r\n    else if(commandInput.startsWith(\"login \")){\r\n      \r\n    }\r\n\r\n    setRows(rows => [...rows, commandInput]);\r\n    setCommandInput(\"\")\r\n  };\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setCommandInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ml-5 mt-5\">\r\n        {rows.map(function(row, i) {\r\n          return (\r\n            <Row key={i}>\r\n              <Col className=\"text-success\" >{\"=>\"} {row}</Col>\r\n            </Row>\r\n          );\r\n        })}\r\n      </div>\r\n      <form className=\"ml-4 mt-2 d-inline-flex\" onSubmit={inputCommand}>\r\n        <p className=\"bg-transparent text-success\">{\">\"}</p>\r\n        <input className=\"bg-transparent text-success\" style={{border: \"none\"}} value={commandInput} onChange={handleOnChange} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\geran\\source\\repos\\wopr\\src\\Popsim\\PopsimMenu.tsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":6,"column":5,"nodeType":"43","messageId":"44","endLine":6,"endColumn":9},{"ruleId":"41","severity":1,"message":"45","line":7,"column":5,"nodeType":"43","messageId":"44","endLine":7,"endColumn":15},{"ruleId":"41","severity":1,"message":"46","line":10,"column":8,"nodeType":"43","messageId":"44","endLine":10,"endColumn":14},{"ruleId":"41","severity":1,"message":"47","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":30},{"ruleId":"41","severity":1,"message":"48","line":3,"column":15,"nodeType":"43","messageId":"44","endLine":3,"endColumn":24},{"ruleId":"41","severity":1,"message":"49","line":3,"column":26,"nodeType":"43","messageId":"44","endLine":3,"endColumn":30},{"ruleId":"41","severity":1,"message":"50","line":3,"column":32,"nodeType":"43","messageId":"44","endLine":3,"endColumn":37},{"ruleId":"41","severity":1,"message":"51","line":4,"column":9,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":19,"column":13,"nodeType":"54","endLine":24,"endColumn":4},{"ruleId":"55","severity":1,"message":"56","line":29,"column":21,"nodeType":"57","messageId":"58","endLine":29,"endColumn":23},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Switch' is defined but never used.","'SSL_OP_EPHEMERAL_RSA' is defined but never used.","'Container' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]