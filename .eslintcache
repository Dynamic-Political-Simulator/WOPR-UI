[{"C:\\Users\\geran\\source\\repos\\wopr\\src\\index.tsx":"1","C:\\Users\\geran\\source\\repos\\wopr\\src\\reportWebVitals.ts":"2","C:\\Users\\geran\\source\\repos\\wopr\\src\\MainScreen\\MainScreen.tsx":"3","C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\Terminal.tsx":"4","C:\\Users\\geran\\source\\repos\\wopr\\src\\Popsim\\PopsimMenu.tsx":"5","C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\CommandService.ts":"6","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterIndex.tsx":"7","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\PlayerCharacterListing.tsx":"8","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CreateCharacter.tsx":"9","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterDetail.tsx":"10","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\EditCharacter.tsx":"11"},{"size":511,"mtime":1606949752639,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1286,"mtime":1619516367152,"results":"15","hashOfConfig":"13"},{"size":1554,"mtime":1618773605489,"results":"16","hashOfConfig":"13"},{"size":154,"mtime":1616878405618,"results":"17","hashOfConfig":"13"},{"size":914,"mtime":1618773833780,"results":"18","hashOfConfig":"13"},{"size":1476,"mtime":1619367212256,"results":"19","hashOfConfig":"13"},{"size":1013,"mtime":1619473598132,"results":"20","hashOfConfig":"13"},{"size":2973,"mtime":1619474287933,"results":"21","hashOfConfig":"13"},{"size":1817,"mtime":1619524578569,"results":"22","hashOfConfig":"13"},{"size":2790,"mtime":1619524703704,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xgcs7f",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\geran\\source\\repos\\wopr\\src\\index.tsx",[],["49","50"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\reportWebVitals.ts",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\MainScreen\\MainScreen.tsx",["51","52","53"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\Terminal.tsx",["54"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { TerminalCommand } from \"./CommandService\";\r\n\r\nexport function Terminal() {\r\n  const [rows, setRows] = useState<string[]>([\"Welcome to WOPR\"]);\r\n\r\n  const [commandInput, setCommandInput] = useState<string>(\"\");\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setRows(rows => [...rows, \"System ready\"]);\r\n    },\r\n    500);\r\n  }, []);\r\n\r\n  const inputCommand = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    setRows(rows => [...rows, commandInput]);\r\n\r\n    if(commandInput == \"popsim\"){\r\n      window.location.assign(\"/popsim\")\r\n    }\r\n    else{\r\n      TerminalCommand(commandInput).then((response) => {\r\n        setRows(rows => [...rows, response]);\r\n      });\r\n    }\r\n\r\n    setCommandInput(\"\")\r\n  };\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setCommandInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ml-5 mt-5\">\r\n        {rows.map(function(row, i) {\r\n          return (\r\n            <Row key={i}>\r\n              <Col className=\"text-success\" >{\"=>\"} {row}</Col>\r\n            </Row>\r\n          );\r\n        })}\r\n      </div>\r\n      <form className=\"ml-4 mt-2 d-inline-flex\" onSubmit={inputCommand}>\r\n        <p className=\"bg-transparent text-success\">{\">\"}</p>\r\n        <input className=\"bg-transparent text-success\" style={{border: \"none\"}} value={commandInput} onChange={handleOnChange} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\geran\\source\\repos\\wopr\\src\\Popsim\\PopsimMenu.tsx",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\CommandService.ts",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterIndex.tsx",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\PlayerCharacterListing.tsx",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CreateCharacter.tsx",["55","56","57","58","59","60"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Container, Input, Jumbotron, Label, ListGroup } from 'reactstrap';\r\nimport {PlayerCharacterListing, PlayerCharacter, Species} from './PlayerCharacterListing'\r\n\r\nexport function CreateCharacter() {\r\n    const [name, setName] = useState<string>();\r\n    const [species, setSpecies] = useState<string>();\r\n    const [bio, setBio] = useState<string>();\r\n\r\n    const [error, setError] = useState<string | undefined>(undefined);\r\n\r\n    const [data, setData] = useState<string[]>();\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        var requestInit: RequestInit = {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        fetch(\"https://localhost:44394/api/character/get-species\", requestInit)\r\n            .then((response) => response.json())\r\n            .then((response) => setData(response));\r\n        \r\n        //@ts-ignore\r\n        setSpecies(data[0]);\r\n    }, []);\r\n\r\n    function handleClick() {\r\n        var body = {\r\n            characterName: name,\r\n            species: species,\r\n            characterBio: bio\r\n        }\r\n\r\n        var requestInit: RequestInit = {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        fetch(\"https://localhost:44394/api/character/create-character\", requestInit)\r\n            .catch(() => setError(\"Something went wrong, try again.\"))\r\n            .then(() => history.push(\"/my-characters\"))\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Jumbotron>\r\n                <h1>Characters</h1>\r\n\r\n                <hr className=\"my-2\" />\r\n\r\n                <Label>Name</Label>\r\n                <Input\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <Label>Species</Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"species\"\r\n                        value={species}\r\n                        onChange={(e) => setSpecies(e.target.value)}\r\n                    >\r\n                        {data?.map((species) => (\r\n                            <option>{species}</option>\r\n                        ))}\r\n                    </Input>\r\n\r\n                <Label>Bio</Label>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    name=\"bio\"\r\n                    value={bio}\r\n                    onChange={(e) => setBio(e.target.value)}\r\n                />\r\n\r\n                <Button color=\"secondary\" onClick={handleClick}>\r\n                    Create\r\n                </Button>\r\n            </Jumbotron>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterDetail.tsx",["61"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\EditCharacter.tsx",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":5,"nodeType":"70","messageId":"71","endLine":6,"endColumn":9},{"ruleId":"68","severity":1,"message":"72","line":7,"column":5,"nodeType":"70","messageId":"71","endLine":7,"endColumn":15},{"ruleId":"68","severity":1,"message":"73","line":10,"column":8,"nodeType":"70","messageId":"71","endLine":10,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":22,"column":21,"nodeType":"76","messageId":"77","endLine":22,"endColumn":23},{"ruleId":"68","severity":1,"message":"78","line":3,"column":54,"nodeType":"70","messageId":"71","endLine":3,"endColumn":63},{"ruleId":"68","severity":1,"message":"79","line":4,"column":9,"nodeType":"70","messageId":"71","endLine":4,"endColumn":31},{"ruleId":"68","severity":1,"message":"80","line":4,"column":33,"nodeType":"70","messageId":"71","endLine":4,"endColumn":48},{"ruleId":"68","severity":1,"message":"81","line":4,"column":50,"nodeType":"70","messageId":"71","endLine":4,"endColumn":57},{"ruleId":"68","severity":1,"message":"82","line":11,"column":12,"nodeType":"70","messageId":"71","endLine":11,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":32,"column":8,"nodeType":"85","endLine":32,"endColumn":10,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":31,"column":8,"nodeType":"85","endLine":31,"endColumn":10,"suggestions":"88"},{"ruleId":"68","severity":1,"message":"82","line":12,"column":12,"nodeType":"70","messageId":"71","endLine":12,"endColumn":17},{"ruleId":"83","severity":1,"message":"87","line":37,"column":8,"nodeType":"85","endLine":37,"endColumn":10,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Switch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ListGroup' is defined but never used.","'PlayerCharacterListing' is defined but never used.","'PlayerCharacter' is defined but never used.","'Species' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSpecies' needs the current value of 'data'.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'characterId'. Either include it or remove the dependency array.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [data]",{"range":"100","text":"101"},"Update the dependencies array to be: [characterId]",{"range":"102","text":"103"},{"range":"104","text":"103"},[1110,1112],"[data]",[979,981],"[characterId]",[1229,1231]]