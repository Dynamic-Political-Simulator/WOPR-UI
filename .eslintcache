[{"C:\\Users\\geran\\source\\repos\\wopr\\src\\index.tsx":"1","C:\\Users\\geran\\source\\repos\\wopr\\src\\reportWebVitals.ts":"2","C:\\Users\\geran\\source\\repos\\wopr\\src\\MainScreen\\MainScreen.tsx":"3","C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\Terminal.tsx":"4","C:\\Users\\geran\\source\\repos\\wopr\\src\\Popsim\\PopsimMenu.tsx":"5","C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\CommandService.ts":"6","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterIndex.tsx":"7","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\PlayerCharacterListing.tsx":"8","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CreateCharacter.tsx":"9","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterDetail.tsx":"10","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\EditCharacter.tsx":"11","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterSearch.tsx":"12"},{"size":511,"mtime":1606949752639,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1468,"mtime":1619883113934,"results":"16","hashOfConfig":"14"},{"size":1554,"mtime":1618773605489,"results":"17","hashOfConfig":"14"},{"size":154,"mtime":1616878405618,"results":"18","hashOfConfig":"14"},{"size":914,"mtime":1618773833780,"results":"19","hashOfConfig":"14"},{"size":1476,"mtime":1619367212256,"results":"20","hashOfConfig":"14"},{"size":1014,"mtime":1619880487624,"results":"21","hashOfConfig":"14"},{"size":3037,"mtime":1619884101226,"results":"22","hashOfConfig":"14"},{"size":1817,"mtime":1619524578569,"results":"23","hashOfConfig":"14"},{"size":2790,"mtime":1619524703704,"results":"24","hashOfConfig":"14"},{"size":3953,"mtime":1619884239791,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xgcs7f",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\geran\\source\\repos\\wopr\\src\\index.tsx",[],["54","55"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\reportWebVitals.ts",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\MainScreen\\MainScreen.tsx",["56","57","58"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\Terminal.tsx",["59"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { TerminalCommand } from \"./CommandService\";\r\n\r\nexport function Terminal() {\r\n  const [rows, setRows] = useState<string[]>([\"Welcome to WOPR\"]);\r\n\r\n  const [commandInput, setCommandInput] = useState<string>(\"\");\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setRows(rows => [...rows, \"System ready\"]);\r\n    },\r\n    500);\r\n  }, []);\r\n\r\n  const inputCommand = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    setRows(rows => [...rows, commandInput]);\r\n\r\n    if(commandInput == \"popsim\"){\r\n      window.location.assign(\"/popsim\")\r\n    }\r\n    else{\r\n      TerminalCommand(commandInput).then((response) => {\r\n        setRows(rows => [...rows, response]);\r\n      });\r\n    }\r\n\r\n    setCommandInput(\"\")\r\n  };\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setCommandInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ml-5 mt-5\">\r\n        {rows.map(function(row, i) {\r\n          return (\r\n            <Row key={i}>\r\n              <Col className=\"text-success\" >{\"=>\"} {row}</Col>\r\n            </Row>\r\n          );\r\n        })}\r\n      </div>\r\n      <form className=\"ml-4 mt-2 d-inline-flex\" onSubmit={inputCommand}>\r\n        <p className=\"bg-transparent text-success\">{\">\"}</p>\r\n        <input className=\"bg-transparent text-success\" style={{border: \"none\"}} value={commandInput} onChange={handleOnChange} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\geran\\source\\repos\\wopr\\src\\Popsim\\PopsimMenu.tsx",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Terminal\\CommandService.ts",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterIndex.tsx",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\PlayerCharacterListing.tsx",[],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CreateCharacter.tsx",["60","61","62","63","64"],"C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterDetail.tsx",["65"],"import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string'\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { Button, Container, Jumbotron } from 'reactstrap';\r\nimport { PlayerCharacter } from './PlayerCharacterListing';\r\n\r\n\r\nexport function CharacterDetail() {\r\n\r\n    const [data, setData] = useState<PlayerCharacter>();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const values = queryString.parse(location.search)\r\n\r\n    const characterId = values.id;\r\n\r\n    useEffect(() => {\r\n        var requestInit: RequestInit = {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        fetch(\"https://localhost:44394/api/character/get-character?id=\" + characterId, requestInit)\r\n            .then((response) => response.json())\r\n            .then((response) => setData(response));\r\n    }, []);\r\n\r\n    function handleClick() {\r\n        history.push(\"edit-character?id=\" + data?.characterId);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Jumbotron>\r\n                <h1>{data?.characterName}</h1>\r\n                <hr className=\"my-2\"/>\r\n\r\n                <p>Species: {data?.species.speciesName}</p>\r\n\r\n                {data?.causeOfDeath == null ? \r\n                <p>{data?.yearOfBirth} - Present</p> : \r\n                <>\r\n                    <p>{data?.yearOfBirth} - {data?.yearOfDeath}</p>\r\n                    <p>Cause of death: {data?.causeOfDeath}</p>\r\n                </>}\r\n\r\n                <p>Bio: {data?.characterBio}</p>\r\n\r\n                <Button color=\"secondary\" onClick={handleClick}>\r\n                    Edit\r\n                </Button>\r\n            </Jumbotron>\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\EditCharacter.tsx",["66","67"],"import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string'\r\nimport { useLocation } from 'react-router';\r\nimport { Button, Container, Input, Jumbotron, Label } from 'reactstrap';\r\nimport { PlayerCharacter } from './PlayerCharacterListing';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport function EditCharacter() {\r\n    const [data, setData] = useState<PlayerCharacter>();\r\n    const [bio, setBio] = useState<string>();\r\n    const [error, setError] = useState<string | undefined>(undefined);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const values = queryString.parse(location.search)\r\n\r\n    const characterId = values.id;\r\n\r\n    useEffect(() => {\r\n        var requestInit: RequestInit = {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        fetch(\"https://localhost:44394/api/character/get-character?id=\" + characterId, requestInit)\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                setData(response);\r\n                setBio(response.characterBio);\r\n            });\r\n\r\n    }, []);\r\n\r\n    function handleClick() {\r\n        var body = {\r\n            characterId: data?.characterId,\r\n            characterBio: bio\r\n        }\r\n\r\n        var requestInit: RequestInit = {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        fetch(\"https://localhost:44394/api/character/edit-character\", requestInit)\r\n            .catch(() => setError(\"Something went wrong, try again.\"))\r\n            .then(() => history.push(\"/character?id=\" + data?.characterId))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Jumbotron>\r\n                <h1>Edit: {data?.characterName}</h1>\r\n                <hr className=\"my-2\"/>\r\n\r\n                <p>Species: {data?.species.speciesName}</p>\r\n\r\n                {data?.causeOfDeath == null ? \r\n                <p>{data?.yearOfBirth} - Present</p> : \r\n                <>\r\n                    <p>{data?.yearOfBirth} - {data?.yearOfDeath}</p>\r\n                    <p>Cause of death: {data?.causeOfDeath}</p>\r\n                </>}\r\n\r\n                <Label>Bio</Label>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    name=\"bio\"\r\n                    value={bio}\r\n                    onChange={(e) => setBio(e.target.value)}\r\n                />\r\n\r\n                <Button color=\"secondary\" onClick={handleClick}>\r\n                    Save\r\n                </Button>\r\n            </Jumbotron>\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\geran\\source\\repos\\wopr\\src\\Characters\\CharacterSearch.tsx",["68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":5,"nodeType":"76","messageId":"77","endLine":6,"endColumn":9},{"ruleId":"74","severity":1,"message":"78","line":7,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":22,"column":21,"nodeType":"82","messageId":"83","endLine":22,"endColumn":23},{"ruleId":"74","severity":1,"message":"84","line":3,"column":54,"nodeType":"76","messageId":"77","endLine":3,"endColumn":63},{"ruleId":"74","severity":1,"message":"85","line":4,"column":9,"nodeType":"76","messageId":"77","endLine":4,"endColumn":31},{"ruleId":"74","severity":1,"message":"86","line":4,"column":33,"nodeType":"76","messageId":"77","endLine":4,"endColumn":48},{"ruleId":"74","severity":1,"message":"87","line":4,"column":50,"nodeType":"76","messageId":"77","endLine":4,"endColumn":57},{"ruleId":"74","severity":1,"message":"88","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":31,"column":8,"nodeType":"91","endLine":31,"endColumn":10,"suggestions":"92"},{"ruleId":"74","severity":1,"message":"88","line":12,"column":12,"nodeType":"76","messageId":"77","endLine":12,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":37,"column":8,"nodeType":"91","endLine":37,"endColumn":10,"suggestions":"93"},{"ruleId":"74","severity":1,"message":"94","line":15,"column":24,"nodeType":"76","messageId":"77","endLine":15,"endColumn":37},{"ruleId":"89","severity":1,"message":"95","line":42,"column":8,"nodeType":"91","endLine":42,"endColumn":14,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Switch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ListGroup' is defined but never used.","'PlayerCharacterListing' is defined but never used.","'PlayerCharacter' is defined but never used.","'Species' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'characterId'. Either include it or remove the dependency array.","ArrayExpression",["99"],["100"],"'setTotalPages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alive' and 'search'. Either include them or remove the dependency array.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"102","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [characterId]",{"range":"107","text":"108"},{"range":"109","text":"108"},"Update the dependencies array to be: [alive, page, search]",{"range":"110","text":"111"},[979,981],"[characterId]",[1229,1231],[1348,1354],"[alive, page, search]"]